@using Microsoft.JSInterop
@using SimpleProgram.Lib.Archives
@using SimpleProgram.Lib.JSInterop


<div class="card" style="height: 100%; width: 100%;">
    
    <div class="card-divider">
        <h6>@Header</h6>
    </div>

    <div id="@($"plotly-{_id}")" style="height: 100%; width: 100%;">
        
        @if (!_rendered)
        {
            <div class="sk-wave">
                <div class="sk-rect sk-rect1"></div>
                <div class="sk-rect sk-rect2"></div>
                <div class="sk-rect sk-rect3"></div>
                <div class="sk-rect sk-rect4"></div>
                <div class="sk-rect sk-rect5"></div>
            </div>
        }
        
    </div>
    
</div>


@functions
{
    [Parameter]
    // ReSharper disable once AutoPropertyCanBeMadeGetOnly.Local
    private string Header { get; set; } = "График";

    private Sankey _sankey;
    
    [Parameter]
    private Sankey Sankey { 
        get => _sankey;
        set
        {
            _sankey =value;
            if (_sankey != null)
                Build();
        }
    }

    private int _id;

    private bool _rendered;

    protected override void OnInit()
    {
        base.OnInit();
        _id = new Random().Next();
    }

    private async void Build()
    {
        var plotLy = new Plotly();

        plotLy.AddData();
        
        plotLy.LastData.node.label = Sankey.NodeLabels;

        plotLy.LastData.link.label = Sankey.LinkLabels;
        plotLy.LastData.link.source = Sankey.LinkSources;
        plotLy.LastData.link.target = Sankey.LinkTargets;
        plotLy.LastData.link.value = Sankey.LinkValues;

        plotLy.LastData.type = PlotlyTypes.sankey;
        plotLy.LastData.orientation = "h";

        _rendered = await JSRuntime.Current.InvokeAsync<bool>("plotlyhelpers.react", $"plotly-{_id}", plotLy);
        StateHasChanged();
    }

}