@using Blazor.App.Services
@using SimpleProgram.Lib.JSInterop
@using SimpleProgram.Lib.Tag

@inject Data data

<div class="card" style="height: 100%; width: 100%;">
    <div class="card-divider align-center">
        <h4>@Header</h4>
    </div>
    <div id="@($"plotly-{_id}")" style="height: 100%; width: 100%;">
        
        <div class="sk-wave @(_rendered ? "hide" : "")">
            <div class="sk-rect sk-rect1"></div>
            <div class="sk-rect sk-rect2"></div>
            <div class="sk-rect sk-rect3"></div>
            <div class="sk-rect sk-rect4"></div>
            <div class="sk-rect sk-rect5"></div>
        </div>
        
    </div>
</div>


@functions{

    [Parameter]
    // ReSharper disable once AutoPropertyCanBeMadeGetOnly.Local
    private string Header { get; set; } = "График";

    [Parameter]
    private ITag Tag { get; set; }

    private int _id;

    private bool _rendered;

    protected override void OnInit()
    {
        base.OnInit();
        _id = new Random().Next();
    }

    protected override async Task OnAfterRenderAsync()
    {
        if (_rendered) return;

        _rendered = true;

        var plotLy = new Plotly();
        
        if (Tag == null)
            Tag = data.TGEnergy.tagSum;

        plotLy.ClearData();
        plotLy.AddData();

        var ts = await Tag.GetTimeSeriesAsync(DateTime.MinValue, DateTime.MaxValue);

        plotLy.GetLastData().x = ts.Times;
        plotLy.GetLastData().y = ts.Values;

        plotLy.layout.showlegend = false;
        plotLy.layout.margin.l = 60;
        plotLy.layout.margin.r = 10;
        plotLy.layout.margin.t = 10;
        plotLy.layout.margin.b = 60;
        plotLy.config.displayModeBar = false;

        await JSRuntime.Current.InvokeAsync<bool>("plotlyhelpers.react", $"plotly-{_id}", plotLy);
        StateHasChanged();
    }

}