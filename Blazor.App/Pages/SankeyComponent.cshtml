@using Blazor.App.Services
@using SimpleProgram.Lib.JSInterop

@inject Data data


<div class="card" style="height: 100%; width: 100%;">
    <div class="card-divider align-center">
        <h4>@Header</h4>
    </div>
    <div id="@($"plotly-{_id}")" style="height: 100%; width: 100%;"></div>
</div>


@functions
{
    [Parameter]
    // ReSharper disable once AutoPropertyCanBeMadeGetOnly.Local
    private string Header { get; set; } = "График";
    
    private int _id;

    protected override void OnInit()
    {
        base.OnInit();
        _id = new Random().Next();
    }
    
    private bool _rendered;

    protected override async Task OnAfterRenderAsync()
    {
        if (_rendered) return;
        
        _rendered = true;

        var plotLy = new Plotly();

        plotLy.AddData();
        
        var sankey = new Sankey();

        var nodeA1 = sankey.AddNode("A1");
        var nodeA2 = sankey.AddNode("A2");
        var nodeB1 = sankey.AddNode("B1");
        
        sankey.AddLink(nodeA1, nodeB1, data.TagGroup1.MDBA_QS1.Increment(DateTime.MinValue, DateTime.MaxValue));
        sankey.AddLink(nodeA2, nodeB1, data.TagGroup1.MDBB_QS1.Increment(DateTime.MinValue, DateTime.MaxValue));

        plotLy.GetLastData().node.label = sankey.NodeLabels;

        plotLy.GetLastData().link.source = sankey.LinkSources;
        plotLy.GetLastData().link.target = sankey.LinkTargets;
        plotLy.GetLastData().link.value = sankey.LinkValues;
        
        plotLy.GetLastData().type = PlotlyTypes.sankey;
        plotLy.GetLastData().orientation = "h";
        
        await JSRuntime.Current.InvokeAsync<bool>("plotlyhelpers.react", $"plotly-{_id}", plotLy);
    }

}
