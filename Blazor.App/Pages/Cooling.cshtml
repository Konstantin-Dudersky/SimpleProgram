@page "/cooling"
@using Blazor.App.Services

@inject Data Data

<div class="grid-x grid-padding-x grid-padding-y">
    <div class="cell small-12 medium-6 large-4" style="height: 400px;">
        <Widget Header="Коэффициент PUE">

            <div class="page1">
                <Gauge
                    Value="@Pue"
                    ScaleLow="0"
                    ScaleHigh="2"
                    PvWhLim="1.8"
                    PvAhLim="1.9"/>
            </div>

            <div class="page2">
                <ScatterByTime
                    Tag="@Data.TGEnergy.temperature"/>
            </div>

        </Widget>
    </div>

    <div class="cell small-12 medium-6 large-4" style="height: 400px;">
        <Widget Header="Потребление от темп. наружного воздуха (1 сутки)">

            <div class="page1">
                <ScatterByTag
                    TagX="@Data.TGEnergy.temperature"
                    TagXSimplifyType="@SimplifyType.Average"
                    TagY="@Data.TGEnergy.PUE"
                    TagYSimplifyType="@SimplifyType.None"
                    SimplifyTime="86400"/>
            </div>

        </Widget>
    </div>

    <div class="cell small-12 medium-6 large-4" style="height: 400px;">
        
        <Widget Header="Распределение Э/Э">

            <div class="page1">
                <SankeyComponent
                    SankeyFunc="@BuildSankey"/>
            </div>
            
        </Widget>

    </div>
    
    <div class="cell small-12 medium-6 large-4" style="height: 400px;">
        <Widget Header="Процент Э/Э на машзал">

            <div class="page1">
                <ScatterByTime
                    Tag="@Data.TGEnergy.PUE"
                    SimplifyTime="86400"/>
            </div>

        </Widget>
    </div>
    
</div>


@functions {

    [CascadingParameter]
    // ReSharper disable once UnusedAutoPropertyAccessor.Local
    private CascadingValueClass CascadingValue { get; set; }

    private double Pue { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Pue = await Data.TGEnergy.PUE.GetArchiveValueAsync(CascadingValue.DateTimeRange.Begin, CascadingValue.DateTimeRange.End);
    }

    private async Task<Sankey> BuildSankey()
    {
        var sankey = new Sankey();

        var begin = CascadingValue.DateTimeRange.Begin;
        var end = CascadingValue.DateTimeRange.End;

        var nodeCooling = sankey.AddNode("Холодоснабжение");

        var nodeChiller1 = sankey.AddNode("Чиллер 1");
        var nodeChiller2 = sankey.AddNode("Чиллер 2");
        var nodeChiller3 = sankey.AddNode("Чиллер 3");
        var nodeHydro1 = sankey.AddNode("Гидромодуль 1");
        var nodeHydro2 = sankey.AddNode("Гидромодуль 2");
        var nodeHydro3 = sankey.AddNode("Гидромодуль 3");

    // Холодоснабжение
        sankey.AddLink(nodeCooling, nodeChiller1,
            await Data.TGEnergy.MDB_A__QF2_1.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 1");
        sankey.AddLink(nodeCooling, nodeChiller1,
            await Data.TGEnergy.MDB_B__QF2_1.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 2");
        sankey.AddLink(nodeCooling, nodeChiller2,
            await Data.TGEnergy.MDB_A__QF2_2.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 1");
        sankey.AddLink(nodeCooling, nodeChiller2,
            await Data.TGEnergy.MDB_B__QF2_2.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 2");
        sankey.AddLink(nodeCooling, nodeChiller3,
            await Data.TGEnergy.MDB_A__QF2_3.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 1");
        sankey.AddLink(nodeCooling, nodeChiller3,
            await Data.TGEnergy.MDB_B__QF2_3.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 2");

        sankey.AddLink(nodeCooling, nodeHydro1,
            await Data.TGEnergy.MDB_B__QF2_4.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 1");
        sankey.AddLink(nodeCooling, nodeHydro1,
            await Data.TGEnergy.UPS_MDB_A__QF4_1.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 2");
        sankey.AddLink(nodeCooling, nodeHydro2,
            await Data.TGEnergy.MDB_B__QF2_5.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 1");
        sankey.AddLink(nodeCooling, nodeHydro2,
            await Data.TGEnergy.UPS_MDB_A__QF4_2.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 2");
        sankey.AddLink(nodeCooling, nodeHydro3,
            await Data.TGEnergy.MDB_B__QF2_6.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 1");
        sankey.AddLink(nodeCooling, nodeHydro3,
            await Data.TGEnergy.UPS_MDB_A__QF4_3.GetArchiveValueAsync(begin, end, SimplifyType.Increment), "Ввод 2");

        return sankey;
    }

}